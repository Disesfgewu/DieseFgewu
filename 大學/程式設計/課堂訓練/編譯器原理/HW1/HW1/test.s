.section .data
    m:
        .long 7, 53, 183, 439, 863, 497, 383, 563, 79, 973, 287, 63, 343, 169, 583
        .long 627, 343, 773, 959, 943, 767, 473, 103, 699, 303, 957, 703, 583, 639, 913
        .long 447, 283, 463, 29, 23, 487, 463, 993, 119, 883, 327, 493, 423, 159, 743
        .long 217, 623, 3, 399, 853, 407, 103, 983, 89, 463, 290, 516, 212, 462, 350
        .long 960, 376, 682, 962, 300, 780, 486, 502, 912, 800, 250, 346, 172, 812, 350
        .long 870, 456, 192, 162, 593, 473, 915, 45, 989, 873, 823, 965, 425, 329, 803
        .long 973, 965, 905, 919, 133, 673, 665, 235, 509, 613, 673, 815, 165, 992, 326
        .long 322, 148, 972, 962, 286, 255, 941, 541, 265, 323, 925, 281, 601, 95, 973
        .long 445, 721, 11, 525, 473, 65, 511, 164, 138, 672, 18, 428, 154, 448, 848
        .long 414, 456, 310, 312, 798, 104, 566, 520, 302, 248, 694, 976, 430, 392, 198
        .long 184, 829, 373, 181, 631, 101, 969, 613, 840, 740, 778, 458, 284, 760, 390
        .long 821, 461, 843, 513, 17, 901, 711, 993, 293, 157, 274, 94, 192, 156, 574
        .long 34, 124, 4, 878, 450, 476, 712, 914, 838, 669, 875, 299, 823, 329, 699
        .long 815, 559, 813, 459, 522, 788, 168, 586, 966, 232, 308, 833, 251, 631, 107
        .long 813, 883, 451, 509, 615, 77, 281, 613, 459, 205, 380, 274, 302, 35, 805

.section .bss
    memo:   .space  2097152
    max_sum: .quad 0         

.section .text
    .globl main

main:
    xor rax, rax                
    xor rbx, rbx                
    xor rcx, rcx                
    call calculate_max_sum       
    mov rdi, rax                 
    mov rax, 60                  
    syscall

calculate_max_sum:
    cmp rbx, 15                  
    je .return                   
    mov rdx, 1                   

.loop_columns:
    test rcx, rdx                
    jnz .next_column             

    mov r8, rbx                  
    imul r8, rbx                 
    add r8, rax                  
    call calculate_max_sum       
    mov rsi, rax                 

.next_column:
    shl rdx, 1                   
    cmp rdx, 32768               
    jb .loop_columns             

.return:
    mov rax, rsi                 
    ret
